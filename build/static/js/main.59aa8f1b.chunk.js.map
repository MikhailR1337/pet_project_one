{"version":3,"sources":["redux/helpers.js","redux/selectors/selectors.js","decorators/accordion.js","components/Comment.js","components/CommentList.js","redux/types.js","components/forms/FormCommentAdd.js","redux/actionCreaters/actionCreaters.js","components/Article.js","components/ArticleList.js","components/filters/selectFilter/SelectFilter.js","components/filters/dayPickerFilter/DayPickerFilter.js","components/filters/dayPickerFilter/styleForHelmet.js","components/filters/Filter.js","fixtures.js","redux/reducers/filterReducer.js","redux/reducers/rootReducer.js","redux/reducers/articleReducer.js","redux/reducers/commentReducer.js","redux/store/store.js","redux/middlewares/middlewares.js","App.js","index.js"],"names":["arrToMap","arr","reduce","acc","item","id","mapToArr","obj","Object","keys","map","OriginalComponent","commentsGetter","state","comments","idGetter","_state","props","articleFilteredSelector","createSelector","articles","filters","selected","dateRange","from","to","filter","article","published","Date","parse","date","length","elem","value","connect","ownProps","comment","commentSelector","className","user","text","href","CommentList","isOpen","useState","isOpenComment","setOpenComment","OpenCommentHandler","useEffect","toggleIconImage","toggleButtonText","onClick","CSSTransition","in","timeout","classNames","DELETE_ARTICLE","SELECT_CHANGED","DAYPICKER_CHANGED","ADD_COMMENT","FormCommentAdd","textHandle","event","setState","target","name","submitComment","preventDefault","addComment","articleId","userNameText","commentText","this","userNameRange","validateRange","commentTextRange","userNameLabel","cn","commentTextLabel","userNameInput","min","max","commentTextInput","submitButton","onSubmit","type","onChange","htmlFor","Component","payload","generateId","Article","deleteHandler","deleteArticle","isOpenHandler","toggleCollapsibleBody","toggleBadgeCaption","title","data-badge-caption","isOpenId","animatedComponents","makeAnimated","SelectFilter","handleChange","e","selectChanged","label","options","closeMenuOnSelect","components","isMulti","placeholder","DayPickerFilter","handleDayClick","day","daypickerChanged","DateUtils","addDayToRange","handleResetClick","undefined","modifiers","start","end","toLocaleDateString","numberOfMonths","selectedDays","onDayClick","localeUtils","MomentLocaleUtils","locale","Helmet","React","defaultProps","Filter","normalizedComments","normalizedArticles","initialState","rootReducer","combineReducers","action","uniqueId","someState","concat","newComment","key","includes","current","filterState","store","createStore","compose","applyMiddleware","_store","next","uuidv4","console","log","window","__REDUX_DEVTOOLS_EXTENSION__","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.59aa8f1b.chunk.js","sourcesContent":["export function arrToMap(arr) {\r\n    return arr.reduce((acc, item) => {\r\n        acc[item.id] = item;\r\n        return acc;\r\n    }, {})\r\n        \r\n};\r\n\r\nexport function mapToArr(obj) {\r\n    return Object.keys(obj).map(id => obj[id]);\r\n};","import { createSelector } from 'reselect';\r\nimport { mapToArr } from '../helpers';\r\n\r\nconst articlesGetter = (state) => state.articles;\r\nconst filtersGetter = (state) => state.filters;\r\nconst commentsGetter = (state) => state.comments;\r\nconst idGetter = (_state, props) => props.id;\r\n\r\n\r\nexport const articleFilteredSelector = createSelector(articlesGetter, filtersGetter, (articles, filters) => {\r\n    const { selected, dateRange: { from, to } } = filters;\r\n    return mapToArr(articles).filter(article => {\r\n        const published = Date.parse(article.date);\r\n        return (!selected.length || selected.filter(elem => elem.value === article.id).length) &&\r\n            (!from || !to || (published > from && published < to))\r\n    });\r\n});\r\n\r\nexport const commentSelectorFactory = () => createSelector(commentsGetter, idGetter, (comments, id) => {\r\n    return comments[id];\r\n});","import React, { Component } from 'react';\r\n// экспортируем декоратор, который принимает компонент, а возвращает класс-обертку с новым функционалом\r\nexport const accordionDecorator = (OriginalComponent) => class Accordion extends Component {\r\n    // Задаем state без конструктора \r\n    state = {\r\n        isOpenId: null,\r\n    }\r\n\r\n    // возвращаем исходный компонент с переданным, через props новым функционалом\r\n    render() {\r\n        const { isOpenId } = this.state;\r\n        return (\r\n            <OriginalComponent {...this.props} isOpenId={isOpenId} isOpenHandler={this.isOpenHandler} />\r\n        );\r\n    }\r\n    \r\n    // метод, замыкающий в себе id и позволяющий аккордиону функционировать \r\n    isOpenHandler = (id) => () => {\r\n        const { isOpenId } = this.state;\r\n        this.setState({\r\n            isOpenId: isOpenId === id ? null: id\r\n        })\r\n    };\r\n};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { commentSelectorFactory } from '../redux/selectors/selectors';\r\n\r\nconst Comment = ({ comment }) => {\r\n\r\n    return (\r\n       <>\r\n        <li className=\"collection-item avatar\">\r\n            <i className=\"material-icons circle green\">insert_chart</i>\r\n            <span className=\"title\">{comment.user}</span>\r\n            <p>{comment.text}</p>\r\n            <a href=\"#!\" className=\"secondary-content\"><i className=\"material-icons\">grade</i></a>\r\n        </li>\r\n       </>\r\n    )\r\n}\r\n\r\nComment.propTypes = {\r\n    comment: PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        user: PropTypes.string.isRequired,\r\n        text: PropTypes.string.isRequired\r\n    })\r\n}.isRequired\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const commentSelector = commentSelectorFactory();\r\n\r\n    return { \r\n        comment: commentSelector(state, ownProps)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Comment);\r\n","import React, { useState, useEffect } from 'react';\r\nimport Comment from './Comment';\r\nimport PropTypes from 'prop-types';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\n\r\nexport const CommentList = ({ comments = [], isOpen }) => {\r\n    // Задаем state через хук useState\r\n    const [isOpenComment, setOpenComment] = useState(false);\r\n\r\n    // Меняем состояние true/false\r\n    const OpenCommentHandler = () => {\r\n        setOpenComment(!isOpenComment);\r\n    }\r\n\r\n    // Закрываем комментарии, если статья закрыта с помощью хука useEffect\r\n    useEffect(() => {\r\n        if (!isOpen) {\r\n            setOpenComment(false);\r\n        };\r\n    }, [isOpen])\r\n\r\n    // Меняем icon в зависимости от isOpenComment\r\n    const toggleIconImage = isOpenComment ? \"speaker_notes_off\": \"speaker_notes\";\r\n    // Меняем text btn в зависимости от isOpenComment\r\n    const toggleButtonText = isOpenComment ? \"Закрыть комментарии\": \"Показать комментарии\";\r\n\r\n    // Генерируем кнопку с нужными стилями и наполнением\r\n    const getButton = () => {\r\n        return (\r\n            <a className=\"waves-effect waves-light btn-small mb-1\" onClick={OpenCommentHandler}>\r\n                <i className=\"material-icons right\">{toggleIconImage}</i>\r\n                {toggleButtonText}\r\n            </a>\r\n        )\r\n    }\r\n\r\n    // Получаем комментарии в зависимости от их наличия, либо возвращаем блок, с текстом, об их отсутствии \r\n    const getComments = () => {\r\n        if (comments.length) {\r\n            return (\r\n                <>\r\n                    {getButton()}\r\n                    <CSSTransition in={isOpenComment} timeout={500} classNames=\"comment\">\r\n                    <ul className=\"collection\">\r\n                        {isOpenComment && comments.map((id) => <Comment id={id} key={id} />)}\r\n                    </ul>\r\n                    </CSSTransition>\r\n                </>\r\n            )\r\n        }\r\n        return (\r\n            <>\r\n                <div className=\"card-panel teal deep-purple lighten-3\">Комментариев пока нет</div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    // возвращаем итоговый результат!\r\n    return (\r\n        <>\r\n            {getComments()}\r\n        </>\r\n    )\r\n}\r\n\r\nCommentList.propTypes = {\r\n    comments: PropTypes.array,\r\n    isOpen: PropTypes.bool\r\n}\r\n","export const DELETE_ARTICLE = 'DELETE_ARTICLE';\r\nexport const SELECT_CHANGED = 'SELECT_CHANGED';\r\nexport const DAYPICKER_CHANGED = 'DAYPICKER_CHANGED';\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport cn from 'classnames';\r\nimport { addComment } from '../../redux/actionCreaters/actionCreaters';\r\n\r\nclass FormCommentAdd extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userNameText: '',\r\n            commentText: ''\r\n        }\r\n    }\r\n\r\n    // Универсальный метод для value всех инпутов\r\n    textHandle = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value,\r\n        })\r\n    }\r\n\r\n    // отключаем перезагрузку при нажатии на кнопку\r\n    submitComment = (event) => {\r\n        event.preventDefault();\r\n        const { addComment, articleId } = this.props;\r\n        const { userNameText, commentText } = this.state;\r\n        addComment({user: userNameText, text: commentText } , articleId);\r\n        this.setState({\r\n            userNameText: '',\r\n            commentText: ''\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { userNameText, commentText } = this.state;\r\n        const { userNameRange, commentTextRange } = validateRange;\r\n        \r\n        // прописываем классы с помощью библиотеки classnames\r\n        const userNameLabel = cn({\r\n            \"active\": userNameText,\r\n        });\r\n        const commentTextLabel = cn({\r\n            \"active\": commentText,\r\n        });\r\n        const userNameInput = cn(\"validate\", {\r\n            \"valid\": userNameText.length >= userNameRange.min,\r\n            \"invalid\": userNameText.length > userNameRange.max\r\n        });\r\n        const commentTextInput = cn(\"materialize-textarea\",{\r\n            \"valid\": commentText.length >= commentTextRange.min,\r\n            \"invalid\": commentText.length > commentTextRange.max\r\n        });\r\n\r\n        const submitButton = cn(\"btn waves-effect waves-light mt-1\",{\r\n            \"disabled\": \r\n            (commentText.length < commentTextRange.min || commentText.length > commentTextRange.max) ||\r\n            (userNameText.length < userNameRange.min || userNameText.length > userNameRange.max)\r\n        });\r\n\r\n        return (\r\n            <div className=\"row mt-1\">\r\n                <form className=\"col s12 amber lighten-5\" onSubmit={this.submitComment}>\r\n                    <div className=\"row\">\r\n                        <div className=\"input-field col s4\">\r\n                            <i className=\"material-icons prefix\">account_circle</i>\r\n                            <input id=\"userName\"\r\n                            name=\"userNameText\"\r\n                            type=\"text\"\r\n                            className={userNameInput}\r\n                            value={userNameText}\r\n                            onChange={this.textHandle} />\r\n                            <label htmlFor=\"userName\" className={userNameLabel}>Введите имя</label>\r\n                        </div>\r\n                        <div className=\"input-field col s5\">\r\n                            <i className=\"material-icons prefix\">comment</i>\r\n                            <textarea id=\"comment\"\r\n                            name=\"commentText\"\r\n                            className={commentTextInput}\r\n                            value={commentText}\r\n                            onChange={this.textHandle} />\r\n                            <label htmlFor=\"comment\" className={commentTextLabel}>Введите комментарий</label>\r\n                        </div>\r\n                        <div className=\"input-field col s3 center-align\">\r\n                            <button className={submitButton} type=\"submit\" name=\"action\">добавить\r\n                                <i className=\"material-icons right\">send</i>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// Диапазон для количества символов в инпутах\r\nconst validateRange = {\r\n    userNameRange: {\r\n        min: 1,\r\n        max: 15\r\n    },\r\n    commentTextRange: {\r\n        min: 5,\r\n        max: 30\r\n    }\r\n}\r\n\r\n// прокидываю в this.props addComment\r\nexport default connect(null, { addComment })(FormCommentAdd);","import { DELETE_ARTICLE, SELECT_CHANGED, DAYPICKER_CHANGED, ADD_COMMENT } from '../types';\r\n\r\nexport const deleteArticle = (id, comments) => {\r\n    return { \r\n        type: DELETE_ARTICLE, \r\n        payload: { id, comments } \r\n    };\r\n}\r\n\r\nexport const selectChanged = (selected) => {\r\n    return { \r\n        type: SELECT_CHANGED, \r\n        payload: { selected } \r\n    };\r\n}\r\n\r\nexport const daypickerChanged = (dateRange) => {\r\n    return { \r\n        type: DAYPICKER_CHANGED, \r\n        payload: { dateRange } \r\n    };\r\n}\r\n\r\nexport const addComment = (comment, articleId) => {\r\n    return { \r\n        type: ADD_COMMENT, \r\n        payload: { comment, articleId },\r\n        generateId: true\r\n    };\r\n}\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { CommentList } from './CommentList';\r\nimport PropTypes from 'prop-types';\r\nimport FormCommentAdd from './forms/FormCommentAdd';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { deleteArticle } from '../redux/actionCreaters/actionCreaters';\r\n\r\nclass Article extends Component {\r\n    static propTypes = {\r\n        // from ArticleList\r\n        article: PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            date: PropTypes.string.isRequired,\r\n            title: PropTypes.string.isRequired,\r\n            text: PropTypes.string,\r\n            comments: PropTypes.array\r\n        }).isRequired,\r\n        isOpen: PropTypes.bool.isRequired,\r\n        isOpenHandler: PropTypes.func,\r\n        // from Redux\r\n        deleteArticle: PropTypes.func\r\n    }.isRequired\r\n\r\n    // некоторая оптимизация => больше не перерисовывем все Article при открытии/закрытии\r\n    // shouldComponentUpdate(nextProps, _nextState) {\r\n    //     return nextProps.isOpen !== this.props.isOpen;\r\n    // }\r\n\r\n    deleteHandler = () => {\r\n        const { article, deleteArticle } = this.props;\r\n        deleteArticle(article.id, article.comments);\r\n    }\r\n\r\n    render() {\r\n        const { article, isOpen, isOpenHandler } = this.props;\r\n        // Меняем классы в зависимости от isOpen (Класс dsblock отвечает за открытие/закрытие)\r\n        this.toggleCollapsibleBody = isOpen ? \"collapsible-body dsblock cyan lighten-5\": \"collapsible-body\";\r\n        // Меняем текст Badge в зависимости от isOpen\r\n        this.toggleBadgeCaption = isOpen ? \"Закрыть\": \"Читать далее...\";\r\n        // Меняем icon в зависимости от isOpen\r\n        this.toggleIconImage = isOpen ? \"unfold_less\": \"unfold_more\";\r\n\r\n        return (\r\n            <li>\r\n                <div className=\"collapsible-header cyan lighten-4\" onClick={isOpenHandler}>\r\n                    <i className=\"material-icons green-text text-darken-4\">{this.toggleIconImage}</i>\r\n                    {article.title}\r\n                    <span className=\"new badge green\" data-badge-caption={this.toggleBadgeCaption}></span>\r\n                </div>\r\n                <CSSTransition in={isOpen} timeout={300} classNames=\"article\">\r\n                    <div className={this.toggleCollapsibleBody}>\r\n                        <p>{article.text}</p>\r\n                        <CommentList isOpen={isOpen} comments={article.comments} />\r\n                        {isOpen && <FormCommentAdd articleId={article.id} />}\r\n                        <div className=\"right-align\">\r\n                            <i className=\"material-icons medium red-text\" onClick={this.deleteHandler}>delete</i>\r\n                        </div>\r\n                    </div>\r\n                </CSSTransition>\r\n            </li>\r\n        );\r\n    }\r\n};\r\n\r\n// прокидываю в this.props deleteArticle\r\nexport default connect(null, { deleteArticle })(Article);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Article from './Article';\r\nimport { accordionDecorator } from '../decorators/accordion';\r\nimport { articleFilteredSelector } from '../redux/selectors/selectors';\r\n\r\n\r\nconst ArticleList = ({ isOpenId, isOpenHandler, articles }) => {\r\n    return (\r\n        <ul className=\"collapsible\">\r\n            {articles.length > 0 && articles.map(article => <Article\r\n                article={article}\r\n                key={article.id}\r\n                isOpenHandler={isOpenHandler(article.id)}\r\n                isOpen={article.id === isOpenId}\r\n                />)}\r\n            {!articles.length && <li>\r\n                <div className=\"collapsible-header cyan lighten-4\">\r\n                    <i className=\"material-icons red-text\">not_interested</i>\r\n                    Статей пока нет\r\n                    <span className=\"new badge red\" data-badge-caption=\"Можете написать свою\"></span>\r\n                </div>\r\n            </li>}\r\n        </ul>\r\n    )\r\n}\r\n\r\nArticleList.propTypes = {\r\n    isOpenId: PropTypes.string,\r\n    articles: PropTypes.array,\r\n    isOpenHandler: PropTypes.func\r\n};\r\n\r\n\r\n\r\n// Фильтруем статьи до их рендера\r\nexport default connect((state) => {\r\n    \r\n    return {\r\n        articles: articleFilteredSelector(state)\r\n    }\r\n\r\n})(accordionDecorator(ArticleList));\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Select from 'react-select';\r\nimport makeAnimated from 'react-select/animated';\r\nimport { selectChanged } from '../../../redux/actionCreaters/actionCreaters';\r\nimport { mapToArr } from '../../../redux/helpers';\r\n\r\nconst animatedComponents = makeAnimated()\r\nclass SelectFilter extends Component {\r\n    handleChange = (e) => {\r\n        const { selectChanged } = this.props;\r\n        selectChanged(e.map(elem => {\r\n            return { label: elem.label, value: elem.value }\r\n        }));\r\n    }\r\n    render() {\r\n        const { articles, selected } = this.props;\r\n        const options = articles.map(article => ({\r\n            label: article.title,\r\n            value: article.id\r\n        }));\r\n        return (\r\n            <>\r\n                <Select\r\n                onChange={this.handleChange}\r\n                closeMenuOnSelect={false}\r\n                options={options}\r\n                value={selected}\r\n                components={animatedComponents}\r\n                isMulti\r\n                placeholder=\"Выбрать...\"\r\n                />\r\n            </>\r\n        );\r\n    }\r\n};\r\n\r\n// достаем нужные нам части из redux\r\nconst mapStateToProps = (state) => ({\r\n    selected: state.filters.selected,\r\n    articles: mapToArr(state.articles)\r\n    \r\n});\r\n\r\n// прокидываем в props selectChanged\r\nexport default connect(mapStateToProps, { selectChanged })(SelectFilter);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Helmet from 'react-helmet';\r\nimport DayPicker, { DateUtils } from 'react-day-picker';\r\nimport 'react-day-picker/lib/style.css';\r\nimport { styleForHelmet } from './styleForHelmet';\r\nimport MomentLocaleUtils from 'react-day-picker/moment';\r\nimport 'moment/locale/ru';\r\nimport { daypickerChanged } from '../../../redux/actionCreaters/actionCreaters';\r\n\r\nclass DayPickerFilter extends React.Component {\r\n  static defaultProps = {\r\n    numberOfMonths: 1,\r\n  };\r\n\r\n  handleDayClick = (day) => {\r\n    const { daypickerChanged, dateRange } = this.props;\r\n    const range = DateUtils.addDayToRange(day, dateRange);\r\n    daypickerChanged(range);\r\n  }\r\n\r\n  handleResetClick = (event) => {\r\n    event.preventDefault();\r\n    const { daypickerChanged } = this.props;\r\n    daypickerChanged({from: undefined, to: undefined});\r\n  }\r\n\r\n  render() {\r\n    const { from, to } = this.props.dateRange;\r\n    const modifiers = { start: from, end: to };\r\n    return (\r\n      <div className=\"RangeExample\">\r\n        <span className=\"card-title\">\r\n          {!from && !to && 'Выберите первый день.'}\r\n          {from && !to && 'Выберите второй день.'}\r\n          {from &&\r\n            to &&\r\n            `${from.toLocaleDateString()} -\r\n                ${to.toLocaleDateString()}`}{' '}\r\n          {from && to && (\r\n            <a href=\"/\" className=\"waves-effect waves-light btn-small red mt-1\" onClick={this.handleResetClick}>\r\n              <i className=\"material-icons right\">clear</i>\r\n              сбросить\r\n            </a>\r\n          )}\r\n        </span>\r\n        <DayPicker\r\n          className=\"Selectable\"\r\n          numberOfMonths={this.props.numberOfMonths}\r\n          selectedDays={[from, { from, to }]}\r\n          modifiers={modifiers}\r\n          onDayClick={this.handleDayClick}\r\n          localeUtils={MomentLocaleUtils}\r\n          locale='ru'\r\n        />\r\n        <Helmet>\r\n          <style>{styleForHelmet}</style>\r\n        </Helmet>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n// достаем нужные нам части из redux\r\nconst mapStateToProps = (state) => ({\r\n  dateRange: state.filters.dateRange\r\n})\r\n// прокидываем в props daypickerChanged\r\nexport default connect(mapStateToProps, { daypickerChanged })(DayPickerFilter);","export const styleForHelmet =  ` .Selectable .DayPicker-Day--selected:not(.DayPicker-Day--start):not(.DayPicker-Day--end):not(.DayPicker-Day--outside) {\r\n    background-color: #f0f8ff !important;\r\n    color: #4a90e2;\r\n  }\r\n  .Selectable .DayPicker-Day {\r\n    border-radius: 0 !important;\r\n  }\r\n  .Selectable .DayPicker-Day--start {\r\n    border-top-left-radius: 50% !important;\r\n    border-bottom-left-radius: 50% !important;\r\n  }\r\n  .Selectable .DayPicker-Day--end {\r\n    border-top-right-radius: 50% !important;\r\n    border-bottom-right-radius: 50% !important;\r\n  }\r\n`","import React, { Component } from 'react';\r\nimport SelectFilter from './selectFilter/SelectFilter';\r\nimport DayPickerFilter from './dayPickerFilter/DayPickerFilter';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nexport class Filter extends Component {\r\n\r\n    state = {\r\n        isOpen: false\r\n    }\r\n\r\n    isOpenHandler = () => {\r\n        const { isOpen } = this.state;\r\n        this.setState({\r\n            isOpen: !isOpen\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { isOpen } = this.state;\r\n        // Меняем классы в зависимости от isOpen (Класс dsblock отвечает за открытие/закрытие)\r\n        this.toggleCollapsibleBody = isOpen ? \"collapsible-body dsblock cyan lighten-5\": \"collapsible-body\";\r\n        // Меняем текст Badge в зависимости от isOpen\r\n        this.toggleBadgeCaption = isOpen ? \"Закрыть\": \"Сортировка\";\r\n        // Меняем icon в зависимости от isOpen\r\n        this.toggleIconImage = isOpen ? \"filter_list\": \"dehaze\";\r\n        return (\r\n            <ul className=\"collapsible\">\r\n                <li>\r\n                    <div className=\"collapsible-header cyan lighten-4\" onClick={this.isOpenHandler}>\r\n                        <i className=\"material-icons green-text text-darken-4\">{this.toggleIconImage}</i>\r\n                        Фильтры\r\n                        <span className=\"new badge green\" data-badge-caption={this.toggleBadgeCaption}></span>\r\n                    </div>\r\n                    <div className={this.toggleCollapsibleBody}>\r\n                        <CSSTransition in={isOpen} timeout={500} classNames=\"filter\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col s4\">\r\n                                    <DayPickerFilter />\r\n                                </div>\r\n                                <div className=\"col s8\">\r\n                                    <SelectFilter />\r\n                                </div>\r\n                            </div>\r\n                        </CSSTransition>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        );\r\n    }\r\n}","export const normalizedComments = [\r\n    {\r\n        \"id\": \"qwerqwer\",\r\n        \"user\": \"Gilliam Underwood\",\r\n        \"text\": \"Вот это, конечно, вот да.\"\r\n    },\r\n    {\r\n        \"id\": \"lkjhsdlfkg\",\r\n        \"user\": \"Dolly Franklin\",\r\n        \"text\": \"Пуш это что-то с чем-то.\"\r\n    },\r\n    {\r\n        \"id\": \"zxcvzcxvzxcv\",\r\n        \"user\": \"Brennan Atkins\",\r\n        \"text\": \"Автор молодец, особенно Splice понравился.\"\r\n    },\r\n    {\r\n        \"id\": \"fghjfghjfghj\",\r\n        \"user\": \"Jodi Humphrey\",\r\n        \"text\": \"Век живи, век учись!.\"\r\n    },\r\n    {\r\n        \"id\": \"ertyoertywte\",\r\n        \"user\": \"Joyce Weber\",\r\n        \"text\": \"Мда уж, надо пойти перечитать.\"\r\n    },\r\n    {\r\n        \"id\": \"qwerqwertyy\",\r\n        \"user\": \"Gilliam Underwood\",\r\n        \"text\": \"Мой мир перевернулся!.\"\r\n    },\r\n    {\r\n        \"id\": \"sdfgsdfghu7u7urtv\",\r\n        \"user\": \"Jodi Humphrey\",\r\n        \"text\": \"Пойду протестирую! Кажется я по-новому начну жить!.\"\r\n    },\r\n    {\r\n        \"id\": \"kjfviudfv089w74\",\r\n        \"user\": \"Joyce Weber\",\r\n        \"text\": \"Вот это завернули! Пойду запланирую что-нибудь.\"\r\n    },\r\n    {\r\n        \"id\": \"r23uyrghasdfb7\",\r\n        \"user\": \"Joyce Weber\",\r\n        \"text\": \"Это уже асинхронность какая-то, а казалось бы язык однопоточный.\"\r\n    },\r\n    {\r\n        \"id\": \"rflsbvyeuwr334rg5\",\r\n        \"user\": \"Random Name\",\r\n        \"text\": \"ВАУ! Пойду заменю все if на switch\"\r\n    },\r\n    {\r\n        \"id\": \"234faasffasgfq3r3eda\",\r\n        \"user\": \"Felix Soyferman\",\r\n        \"text\": \"Встречал такое в redux!.\"\r\n    },\r\n    {\r\n        \"id\": \"23rfasdfasdvg\",\r\n        \"user\": \"Hello World\",\r\n        \"text\": \"Встречал пи компиляции typescript в es5.\"\r\n    },\r\n    {\r\n        \"id\": \"fqasfd4r35tga\",\r\n        \"user\": \"Sofia Michailenko\",\r\n        \"text\": \"ES5... ES6... ад какой-то. Пойду в верстальщики!.\"\r\n    },\r\n    {\r\n        \"id\": \"23qwfasdf3\",\r\n        \"user\": \"Brad McKeon\",\r\n        \"text\": \"Тема жесть.\"\r\n    },\r\n    {\r\n        \"id\": \"dadsafw4f45w\",\r\n        \"user\": \"Dolly Franklin\",\r\n        \"text\": \"И кто такое придумал? вот то ли дело верстка...\"\r\n    },\r\n    {\r\n        \"id\": \"234erasfdastw4a\",\r\n        \"user\": \"Brennan Atkins\",\r\n        \"text\": \"А только вчера циклы через for писал, а тут уже вон что.\"\r\n    }\r\n]\r\n\r\nexport const normalizedArticles = [\r\n    {\r\n        \"id\": \"56c782f18990ecf954f6e027\",\r\n        \"date\": \"2021-04-09T15:03:23.000Z\",\r\n        \"title\": \"Методы массивов\",\r\n        \"text\": \"Массивы предоставляют множество методов. Чтобы было проще, в этой главе они разбиты на группы.\",\r\n        \"comments\": [\"qwerqwer\", \"lkjhsdlfkg\", \"zxcvzcxvzxcv\", \"fghjfghjfghj\", \"ertyoertywte\"]\r\n    },\r\n    {\r\n        \"id\": \"56c782f17b4e0ba78c7ad717\",\r\n        \"date\": \"2021-04-09T18:03:23.000Z\",\r\n        \"title\": \"Конструкторы, создание объектов через new\",\r\n        \"text\": \"множество однотипных объектов можно сделать при помощи функции-конструктора и оператора new.\",\r\n        \"comments\": [\"qwerqwertyy\", \"sdfgsdfghu7u7urtv\"]\r\n    },\r\n    {\r\n        \"id\": \"56c782f1978fdf9a0100df52\",\r\n        \"date\": \"2021-04-02T11:03:23.000Z\",\r\n        \"title\": \"Планирование: setTimeout и setInterval\",\r\n        \"text\": \"Мы можем вызвать функцию не в данный момент, а позже, через заданный интервал времени. Это называется «планирование вызова».\",\r\n        \"comments\": [\"kjfviudfv089w74\", \"r23uyrghasdfb7\"]\r\n    },\r\n    {\r\n        \"id\": \"56c782f1e17f4f9311dfaa2c\",\r\n        \"date\": \"2021-04-19T23:03:23.000Z\",\r\n        \"title\": \"Конструкция switch\",\r\n        \"text\": \"Конструкция switch заменяет собой сразу несколько if. Она представляет собой более наглядный способ сравнить выражение сразу с несколькими вариантами.\",\r\n        \"comments\": [\"rflsbvyeuwr334rg5\", \"234faasffasgfq3r3eda\"]\r\n    },\r\n    {\r\n        \"id\": \"56c782f197fe2bad471b3740\",\r\n        \"date\": \"2021-04-04T15:03:23.000Z\",\r\n        \"title\": \"Устаревшее ключевое слово var\",\r\n        \"text\": \"Обычно var не используется в современных скриптах, но всё ещё может скрываться в старых.\",\r\n        \"comments\": [\"23rfasdfasdvg\", \"fqasfd4r35tga\"]\r\n    },\r\n    {\r\n        \"id\": \"56c782f1a2c2c3268ddb3206\",\r\n        \"date\": \"2021-04-08T19:03:23.000Z\",\r\n        \"title\": \"Проверка класса: instanceof\",\r\n        \"text\": \"Оператор instanceof позволяет проверить, к какому классу принадлежит объект, с учётом наследования.\",\r\n        \"comments\": [\"23qwfasdf3\", \"dadsafw4f45w\", \"234erasfdastw4a\"]\r\n    },\r\n    {\r\n        \"id\": \"56c782fghgfc2c3268ddb3206\",\r\n        \"date\": \"2021-04-08T19:03:23.000Z\",\r\n        \"title\": \"Промисы: обработка ошибок\",\r\n        \"text\": \"Цепочки промисов отлично подходят для перехвата ошибок. Если промис завершается с ошибкой, то управление переходит в ближайший обработчик ошибок. На практике это очень удобно.\"\r\n    }\r\n\r\n]\r\n\r\nexport const articles = [\r\n    {\r\n        \"id\": \"56c782f18990ecf954f6e027\",\r\n        \"date\": \"2021-04-09T15:03:23.000Z\",\r\n        \"title\": \"Методы массивов\",\r\n        \"text\": \"Массивы предоставляют множество методов. Чтобы было проще, в этой главе они разбиты на группы.\",\r\n        \"comments\": [\r\n            {\r\n                \"id\": \"qwerqwer\",\r\n                \"user\": \"Gilliam Underwood\",\r\n                \"text\": \"Вот это, конечно, вот да.\"\r\n            },\r\n            {\r\n                \"id\": \"lkjhsdlfkg\",\r\n                \"user\": \"Dolly Franklin\",\r\n                \"text\": \"Пуш это что-то с чем-то.\"\r\n            },\r\n            {\r\n                \"id\": \"zxcvzcxvzxcv\",\r\n                \"user\": \"Brennan Atkins\",\r\n                \"text\": \"Автор молодец, особенно Splice понравился.\"\r\n            },\r\n            {\r\n                \"id\": \"fghjfghjfghj\",\r\n                \"user\": \"Jodi Humphrey\",\r\n                \"text\": \"Век живи, век учись!.\"\r\n            },\r\n            {\r\n                \"id\": \"ertyoertywte\",\r\n                \"user\": \"Joyce Weber\",\r\n                \"text\": \"Мда уж, надо пойти перечитать.\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"id\": \"56c782f17b4e0ba78c7ad717\",\r\n        \"date\": \"2021-04-09T18:03:23.000Z\",\r\n        \"title\": \"Конструкторы, создание объектов через new\",\r\n        \"text\": \"Множество однотипных объектов можно сделать при помощи функции-конструктора и оператора new.\",\r\n        \"comments\": [\r\n            {\r\n                \"id\": \"qwerqwertyy\",\r\n                \"user\": \"Gilliam Underwood\",\r\n                \"text\": \"Мой мир перевернулся!\"\r\n            },\r\n            {\r\n                \"id\": \"sdfgsdfghu7u7urtv\",\r\n                \"user\": \"Jodi Humphrey\",\r\n                \"text\": \"Пойду протестирую! Кажется я по-новому начну жить!\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"id\": \"56c782f1978fdf9a0100df52\",\r\n        \"date\": \"2021-04-02T11:03:23.000Z\",\r\n        \"title\": \"Планирование: setTimeout и setInterval\",\r\n        \"text\": \"Мы можем вызвать функцию не в данный момент, а позже, через заданный интервал времени. Это называется «планирование вызова».\",\r\n        \"comments\": [\r\n            {\r\n                \"id\": \"kjfviudfv089w74\",\r\n                \"user\": \"Joyce Weber\",\r\n                \"text\": \"Вот это завернули! Пойду запланирую что-нибудь.\"\r\n            },\r\n            {\r\n                \"id\": \"r23uyrghasdfb7\",\r\n                \"user\": \"Joyce Weber\",\r\n                \"text\": \"Это уже асинхронность какая-то, а казалось бы язык однопоточный.\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"id\": \"56c782f1e17f4f9311dfaa2c\",\r\n        \"date\": \"2021-04-19T23:03:23.000Z\",\r\n        \"title\": \"Конструкция switch\",\r\n        \"text\": \"Конструкция switch заменяет собой сразу несколько if. Она представляет собой более наглядный способ сравнить выражение сразу с несколькими вариантами.\",\r\n        \"comments\": [\r\n            {\r\n                \"id\": \"rflsbvyeuwr334rg5\",\r\n                \"user\": \"Random Name\",\r\n                \"text\": \"ВАУ! Пойду заменю все if на switch\"\r\n            },\r\n            {\r\n                \"id\": \"234faasffasgfq3r3eda\",\r\n                \"user\": \"Felix Soyferman\",\r\n                \"text\": \"Встречал такое в redux!.\"\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        \"id\": \"56c782f197fe2bad471b3740\",\r\n        \"date\": \"2021-04-04T15:03:23.000Z\",\r\n        \"title\": \"Устаревшее ключевое слово var\",\r\n        \"text\": \"Обычно var не используется в современных скриптах, но всё ещё может скрываться в старых.\",\r\n        \"comments\": [\r\n            {\r\n                \"id\": \"23rfasdfasdvg\",\r\n                \"user\": \"Hello World\",\r\n                \"text\": \"Встречал пи компиляции typescript в es5.\"\r\n            },\r\n            {\r\n                \"id\": \"fqasfd4r35tga\",\r\n                \"user\": \"Sofia Michailenko\",\r\n                \"text\": \"ES5... ES6... ад какой-то. Пойду в верстальщики!.\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"id\": \"56c782f1a2c2c3268ddb3206\",\r\n        \"date\": \"2021-04-08T19:03:23.000Z\",\r\n        \"title\": \"Проверка класса: instanceof\",\r\n        \"text\": \"Оператор instanceof позволяет проверить, к какому классу принадлежит объект, с учётом наследования.\",\r\n        \"comments\": [\r\n            {\r\n                \"id\": \"23qwfasdf3\",\r\n                \"user\": \"Brad McKeon\",\r\n                \"text\": \"Тема жесть.\"\r\n            },\r\n            {\r\n                \"id\": \"dadsafw4f45w\",\r\n                \"user\": \"Dolly Franklin\",\r\n                \"text\": \"И кто такое придумал? вот то ли дело верстка...\"\r\n            },\r\n            {\r\n                \"id\": \"234erasfdastw4a\",\r\n                \"user\": \"Brennan Atkins\",\r\n                \"text\": \"А только вчера циклы через for писал, а тут уже вон что.\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"id\": \"56c782fghgfc2c3268ddb3206\",\r\n        \"date\": \"2021-04-08T19:03:23.000Z\",\r\n        \"title\": \"Промисы: обработка ошибок\",\r\n        \"text\": \"Цепочки промисов отлично подходят для перехвата ошибок. Если промис завершается с ошибкой, то управление переходит в ближайший обработчик ошибок. На практике это очень удобно.\"\r\n    }\r\n\r\n]","import { DELETE_ARTICLE, SELECT_CHANGED, DAYPICKER_CHANGED } from '../types';\r\n\r\nconst initialState = {\r\n    selected: [],\r\n    dateRange: {\r\n        from: undefined,\r\n        to: undefined\r\n    }\r\n}\r\n\r\nexport const filterReducer = (filterState = initialState, action) => {\r\n    const { type, payload } = action;\r\n    switch(type) {\r\n        case SELECT_CHANGED:\r\n            return { ...filterState, selected: payload.selected };\r\n            \r\n        case DAYPICKER_CHANGED:\r\n            return { ...filterState, dateRange: payload.dateRange };\r\n            \r\n        case DELETE_ARTICLE:\r\n            return { ...filterState, selected: filterState.selected.filter(elem => elem.value !== payload.id) };\r\n\r\n        default: return filterState;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport { articleReducer } from './articleReducer';\r\nimport { commentReducer } from './commentReducer';\r\nimport { filterReducer } from './filterReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n    articles: articleReducer,\r\n    comments: commentReducer,\r\n    filters: filterReducer\r\n})\r\n","import { normalizedArticles as initialState } from '../../fixtures';\r\nimport { DELETE_ARTICLE, ADD_COMMENT } from '../types';\r\nimport { arrToMap } from '../helpers';\r\n\r\nexport const articleReducer = (state = arrToMap(initialState), action) => {\r\n    const { type, payload, uniqueId } = action;\r\n    switch (type) {\r\n        // Удаляем статью заменяя state на someState уже без статьи\r\n        case DELETE_ARTICLE: \r\n            const someState = { ...state };\r\n            delete someState[payload.id];\r\n            return someState;\r\n\r\n        // Добавляем комменатарий, только в comments не меняя все остальное\r\n        case ADD_COMMENT:\r\n            const article = state[payload.articleId];\r\n            return {\r\n                ...state,\r\n                [payload.articleId]: {\r\n                    ...article,\r\n                    comments: (article.comments || []).concat(uniqueId)\r\n                }\r\n            }\r\n\r\n        default: return state;\r\n    }\r\n}","import { normalizedComments as initialState } from '../../fixtures';\r\nimport { ADD_COMMENT, DELETE_ARTICLE } from '../types';\r\nimport { arrToMap } from '../helpers';\r\n\r\nexport const commentReducer = (state = arrToMap(initialState), action) => {\r\n    const { type, payload, uniqueId, } = action;\r\n    switch (type) {\r\n        case ADD_COMMENT:\r\n            // Перехватываю payload.comment и докидываю ему uniqueId\r\n            const newComment = {id: uniqueId, ...payload.comment};\r\n            return { ...state, [uniqueId]: newComment };\r\n        // Удаляем все комментарии привязанные к удаленной статье\r\n        case DELETE_ARTICLE:\r\n            return Object.keys(state)\r\n                .filter(key => !payload.comments.includes(key))\r\n                .reduce((acc, current) => ({ ...acc, [current]: state[current] }), {});\r\n\r\n        default: return state;\r\n    } \r\n}","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport { rootReducer } from '../reducers/rootReducer';\r\nimport { loggerMiddleware, uniqueIdMiddleware } from '../middlewares/middlewares';\r\n\r\n// с помощью compose добавляем applyMiddleware и redux dev tools\r\nexport const store = createStore(\r\n    rootReducer,\r\n    compose(\r\n        applyMiddleware(uniqueIdMiddleware, loggerMiddleware),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n);","import { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const loggerMiddleware = (store) => (next) => (action) => {\r\n    console.log('was used', action);\r\n    next(action);\r\n}\r\n\r\n// Смотрю на флаг action.generateId и если true добавляюю поле uniqueId\r\nexport const uniqueIdMiddleware = (_store) => (next) => (action) => {\r\n    if (!action.generateId) return next(action);\r\n    next({\r\n        ...action,\r\n        uniqueId: uuidv4()\r\n    });\r\n}\r\n\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport ArticleList from './components/ArticleList';\r\nimport { Filter } from './components/filters/Filter';\r\nimport { store } from './redux/store/store';\r\nconst App = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <div className=\"container\">\r\n        <Filter />\r\n        <ArticleList />\r\n      </div>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}